plugins {
    id 'me.champeau.gradle.jmh' version '0.2.0'
}

repositories {
    jcenter()
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'me.champeau.gradle.jmh'

dependencies {
    compile 'org.apache.commons:commons-lang3:3.3.2'
    compile 'org.codehaus.groovy:groovy:2.4.3'
    // for tests written in Groovy
    testCompile 'org.codehaus.groovy:groovy-test:2.4.3'
    // for tests using Spock
    testCompile('org.spockframework:spock-core:1.0-groovy-2.4')
    // for tests using JUnit
    testCompile 'junit:junit:4.12'
}

task generateDataSet(type:JavaExec) {
    // directoy where to create files
    ext.outputDir = file("$buildDir/dataset")

    main = 'replace.RandomStringGenerator'
    classpath = sourceSets.main.runtimeClasspath
    args = ["$outputDir", "10,100,1000"]

    // declare task output
    outputs.dir outputDir

}

jmh {
    jmhVersion = '1.7'
    warmupIterations = 20
    warmup = '1s'
    iterations = 20
    benchmarkMode = 'thrpt'
    timeUnit = 'ms'
    fork = 1
    humanOutputFile = null
    jvmArgs = "-Ddatasetdir=${generateDataSet.outputDir}"
}

// data set has to be generated before we start
tasks.getByName('jmh').dependsOn(generateDataSet)